@model Milestone_3.Models.Managers

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if ((string)Session["LoggedIn"] != "true")
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { @class = "control-label col-md-2" })
                    <br>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "control-label col-md-2" })
                    <br>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            @if(ViewBag.NonExistingManager == true)
            {
                <p class="text-danger">@ViewBag.NonExistingManagerError</p>
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Log In" class="btn btn-default" />
            </div>
        </div>
    }
    else
    {
        <p>@Session["User"] is logged in</p>
        <br>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Log Out" class="btn btn-default" />
            </div>
        </div>
    }
}